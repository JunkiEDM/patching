name: Magisk Manager APK Patcher
on:
  schedule:
    - cron: '0 */12 * * *'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (blank for latest)'
      url:
        description: 'URL (blank for stable)'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/setup-java@v1
        with:
          java-version: '17'
          architecture: x64
      
      - name: Setup Environment
        id: setup_environment
        run: |
          wget https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool
          wget -O apktool.jar https://bitbucket.org/iBotPeaches/apktool/downloads/apktool_2.6.1.jar
          chmod +x apktool
      
      - name: Setup mmpatch
        id: setup_mmpatch
        run: git clone https://github.com/Magisk-Modules-Alt-Repo/mmpatch

      - name: Identify Target Tag
        id: identify_target_tag
        run: |
          if [[ ! -z "${{ github.event.inputs.version }}" ]]
          then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          else
            if [[ ! -z "${{ github.event.inputs.url }}" ]]
            then
              echo "VERSION=url-provided" >> $GITHUB_ENV
            else
              echo "VERSION=`git ls-remote --tags https://github.com/topjohnwu/Magisk | grep manager- | awk -F / '{print $NF}' | tail -n 1 | awk -F '-' '{print $2}'`" >> $GITHUB_ENV
            fi
          fi

      - name: Fetch APK
        id: fetch_apk
        run: |
          URL="https://github.com/topjohnwu/Magisk/releases/download/manager-${{ env.VERSION }}/MagiskManager-${{ env.VERSION }}.apk"
          [[ ! -z "${{ github.event.inputs.url }}" ]] && URL="${{ github.event.inputs.url }}"
          wget -O ./mmpatch/MagiskManager.apk "$URL"
      
      - name: Patch APK
        id: patch_apk
        run: |
          export PATH="$PATH:`pwd`"
          cd mmpatch
          ./mmpatch Magisk-Modules-Alt-Repo

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: manager-alt-${{ env.VERSION }}
          release_name: Magisk Manager (Alt Patched) ${{ env.VERSION }}

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./mmpatch/mmpatch-signed.apk
          asset_name: MagiskManager-Alt-Repo-${{ env.VERSION }}.apk
          asset_content_type: application/apk
